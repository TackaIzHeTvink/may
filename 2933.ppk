PuTTY-User-Key-File-3: ssh-rsa
Encryption: none
Comment: rsa-key-20241001
Public-Lines: 6
AAAAB3NzaC1yc2EAAAADAQABAAABAQCK/+oyMi+IWtomVh6pCeih1u9yxO7l8i7B
UD6YuPDEQE1bdIitifvPBGvJY+jWiQrxKSyiTmbs1tXJ4/nDbbuEXLux4sMkLKwk
dZHb1DCkMvYs/4cUMAYMCe92zYU5UQvHTHzRH6Cg8yGreawWwD8hrZ7tIvWmUqFj
T41BcuWv6awlLBiYKc0gvckGdVL9MMq4Auwn8PR1A6JZ3iL9Pfa7LsiY1ZwhtQ3B
6KjHEXu4QOWGJqSMYhOdgAJHm9JWzYHC95FZeP3tP47sy3FsBzu1/8/KWu8o95M3
/j5w41Rn8SRRj6GtC9iWcSzx5zrjIgOPYw6dz07662LtYNpa1fbl
Private-Lines: 14
AAABAGD75M13RMEQGwwKpMPvHPjm/hWHIOUiUMsjEToAOEXGU/NO4Rqsnxy3iflv
k4M1BYR05SauK5Ru5aZDQf7ArsjQ50lb3ip8XPPncIkAiZvXzvpgpEBKrb1ypTmw
dpciXGSHksNbHPmQCtsZPyB0rNfzy2LMNLgDCYZAeF/FKkvNXrdbSsEhvGVQVCyv
CkCvklRizSbxIHxeIr5vcKL/z+V4HkWbUmECXC9Y71ph1xGzyfyaQRKSq1j9uELD
c8gCpNfjHuKu2W2D4eRZK3tCZMFV0hxXFgsChGMt4M1387yypO0n/lsFNsIlHYOQ
OWOMov2x4k3LjpptJEbrjXwoVCEAAACBAPiHCBoBQdURyUf3mmWuvBJ/KtZK+u3f
s0KzamGJ4uls+dSUhRCsGOf3HEUC5zwqg1uwcrs3strLRDcgEMIUs4plU5hE7gfZ
pkJfGrJrNr2ILg6/fzoevdprxZcjfnHu2hpkJfi/CgQQvM9FP3GFkbtw6tCgvqSM
jZSACn7x3HgJAAAAgQCPLdMYq5WDHL1w0o2bdALi6n+taKhM1dltsYk7G6Akl+vl
HBfu8o611J98fLpSWDhWHqkL89mB57swuWxnREEjr4jlAswXyGHLNhunqS7FRP/Q
yMo3K2vNpeYCaNEOftqwjhJa2o+Bbwxhhbmt8hFYXpQCq1KxCZFhgOHoPZIm/QAA
AIB/j7QFwT3qTViM+G92H+tMm34c1gWDr2YXoiXtq4xLKjkjrNTgFWyeZay0Brei
+7mO3DanwrRMMCStGOst6tjJLmnd2K6hrc0yHyeXjTi4y427gZD/hfRIzh/OaB+s
KTshp1JoWfrGRkBbDmRd5qXATyBcxa3qAKgP/QZc0kbP1g==
Private-MAC: 7b3356d9b85cd63f5fca2556cde2ca0d5b5afb4000cc49a7f3a84232cf89fa62


using System;
using System.Text;
using System.Net;
using System.Net.Sockets;
using System.IO;
using System.Threading.Tasks;

namespace SocketClient
{
    class Program
    {
        static TcpClient client = null;
        static byte[] bytes = new byte[1024];
        static void Main(string[] args)
        {
            ConnectToServer();
            GetMessage();
            SendMessage();
            
        
        }

          private static void SendMessage()
        {
            
            while (true)
            {
            
                NetworkStream stream = client.GetStream();
                Console.Write("Введите сообщение: ");
                string message = Console.ReadLine();
                byte[] msg = Encoding.ASCII.GetBytes(message);
                stream.Write(msg, 0, msg.Length);
                
            }
        }
        async private static void GetMessage()
        {
            while (true)
            {
            await Task.Delay(1000);
                try
                {
                    NetworkStream stream = client.GetStream();
                    byte[] buffer = new byte[1024];
                    string mess;
                    stream.Read(buffer, 0, buffer.Length);
                    mess=(Encoding.ASCII.GetString(buffer,0,buffer.Length));

                    Console.WriteLine(mess);
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message);
                }
            }
        }

        private static void ConnectToServer()
        {
            while (client == null)
            {
                try
                {
                    IPAddress ipAddr = IPAddress.Parse("192.168.0.11");
                    IPEndPoint ipEndPoint = new IPEndPoint(ipAddr, 8080);

                    TcpClient sender = new TcpClient();
                    sender.Connect(ipEndPoint);
                    client = sender;
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.ToString());
                }
            }
        }
    }
}












using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;

namespace MultiServer
{
    class Program
    {
        private static bool status = true;
        private static TcpClient tcpClient = new TcpClient();
        private static TcpListener serverSocket = null;
        private const int BUFFER_SIZE = 1024;
        private const int PORT = 8080;
        private static readonly byte[] buffer = new byte[BUFFER_SIZE];

        static void Main()
        {
            Console.Title = "Server";
            SetupServer();
            LoopConnect();
            LoopSend();

            command(Console.ReadLine());            
        }
        private static void command(string com)
        {
            while (status)
            {
                if (com == "stop")
                {
                    status=false;
                }
                else
                {
                    command(Console.ReadLine());
                }
            }
        }
        async private static void LoopSend()
        {
            while(true)
            {
            await Task.Delay(1000);
                try
                {


                    byte[] buffer = new byte[BUFFER_SIZE];
                    buffer = Encoding.ASCII.GetBytes("qwe");
                    NetworkStream stream = tcpClient.GetStream();
                    stream.Write(buffer, 0, buffer.Length);

                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.ToString());
                }
                }
            }
        

        //async private static void LoopGet()
        //{
        //    while()
        //    {
        //        try
        //        {

        //        }
        //    }
        //}

        

        async private static void LoopConnect()
        {
            while(true)
            {
               await Task.Delay(1000); 
            TcpClient client = serverSocket.AcceptTcpClient();
            tcpClient=client;
            NetworkStream networkStream = client.GetStream();
            Console.WriteLine($"connected: {client.Client.RemoteEndPoint}");
                
            }
        }

        private static void SetupServer()
        {
            Console.WriteLine("Setting up server...");
            IPAddress ipArres = IPAddress.Parse("192.168.0.11");
            serverSocket = new TcpListener(ipArres,PORT);
            serverSocket.Start();
            Console.WriteLine("server started");
        }

        
    }
}
